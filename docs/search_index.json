[["other-dataset.html", "Chapter 9 Other dataset 9.1 Fungi data 9.2 Metagenomic data 9.3 Gut microbiome", " Chapter 9 Other dataset 9.1 Fungi data Another ITS sequencing dataset (Gao et al. 2019) is also stored in the example data of the package. Here, we use it as an example to show the use of FUNGuild database(Nguyen et al. 2016). FungalTraits (Põlme et al. 2020) database is also available for identifying fungal traits. library(microeco) library(magrittr) # load ITS data data(sample_info_ITS) data(otu_table_ITS) data(taxonomy_table_ITS) # create microtable object meco_fungi &lt;- microtable$new(sample_table = sample_info_ITS, otu_table = otu_table_ITS, tax_table = taxonomy_table_ITS) # remove the taxa not assigned in the Kingdom &quot;k__Fungi&quot; meco_fungi$tax_table %&lt;&gt;% base::subset(Kingdom == &quot;k__Fungi&quot;) # use tidy_dataset() to make OTUs and samples information consistent across files meco_fungi$tidy_dataset() Then, let’s perform the fungal trait prediction. t1 &lt;- trans_func$new(meco_fungi) # Both FungalTraits and FUNGuild are available t1$cal_spe_func(fungi_database = &quot;FungalTraits&quot;) t1$cal_spe_func_perc(abundance_weighted = TRUE) # return: t1$res_spe_func_perc Then we show an example on the differential test of traits across groups. # clone meco_fungi for differential test tmp_mt &lt;- clone(meco_fungi) # we need assign the table to taxa_abund manually tmp_mt$taxa_abund$func &lt;- as.data.frame(t(t1$res_spe_func_perc), check.names = FALSE) # use trans_diff class to perform differential test t2 &lt;- trans_diff$new(dataset = tmp_mt, method = &quot;anova&quot;, group = &quot;sample_type&quot;, taxa_level = &quot;func&quot;) t2$plot_diff_abund(add_sig = T, simplify_names = FALSE) + ggplot2::ylab(&quot;Relative abundance (%)&quot;) Then we show the distribution of traits across modules in network. # create trans_network object t1 &lt;- trans_network$new(dataset = meco_fungi, cal_cor = &quot;WGCNA&quot;, taxa_level = &quot;OTU&quot;, filter_thres = 0.000001, cor_method = &quot;spearman&quot;) # create correlation network t1$cal_network(COR_p_thres = 0.05, COR_cut = 0.6) # add modules t1$cal_module() # convert module info to microtable object meco_module &lt;- t1$trans_comm(use_col = &quot;module&quot;) # create trans_func object t2 &lt;- trans_func$new(meco_module) # identify species traits, automatically select database for prokaryotes or fungi # fungi_database = &quot;FungalTraits&quot; for the FungalTraits database t2$cal_spe_func(fungi_database = &quot;FUNGuild&quot;) # calculate abundance-unweighted functional redundancy of each trait for each network module t2$cal_spe_func_perc(abundance_weighted = FALSE) # plot the functional redundancy of network modules t2$plot_spe_func_perc(order_x = paste0(&quot;M&quot;, 1:10)) 9.2 Metagenomic data In the file2meco package part, we provide several examples to transform the output files of some famous metagenomic tools (e.g. HUMAnN and kraken2) to the microtable object directly. Here, we show some detailed examples using KEGG pathway results. library(microeco) library(file2meco) library(magrittr) ?humann2meco sample_file_path &lt;- system.file(&quot;extdata&quot;, &quot;example_metagenome_sample_info.tsv&quot;, package=&quot;file2meco&quot;) match_file_path &lt;- system.file(&quot;extdata&quot;, &quot;example_metagenome_match_table.tsv&quot;, package=&quot;file2meco&quot;) # use KEGG pathway based HUMAnN result abund_file_path &lt;- system.file(&quot;extdata&quot;, &quot;example_HUMAnN_KEGG_abund.tsv&quot;, package=&quot;file2meco&quot;) # match_table parameter can be used to replace sample names test &lt;- humann2meco(abund_file_path, db = &quot;KEGG&quot;, sample_table = sample_file_path, match_table = match_file_path) # remove the unclassified pathway in Level.1 test$tax_table %&lt;&gt;% subset(Level.1 != &quot;unclassified&quot;) test$tidy_dataset() # rel = FALSE donot use relative abundance, use the raw RPK test$cal_abund(select_cols = 1:3, rel = FALSE) # use_percentage = FALSE disable percentage for relative abundance test1 &lt;- trans_abund$new(test, taxrank = &quot;Level.2&quot;, ntaxa = 10, use_percentage = FALSE) test1$plot_bar(facet = &quot;Group&quot;, bar_full = FALSE, xtext_angle = 30) + ggplot2::ylab(&quot;Abundance (RPK)&quot;) Then, we select both function and taxa to see which taxa those high abundant pathways come from. # This operation is more flexible test$cal_abund(select_cols = c(&quot;Level.1&quot;, &quot;Phylum&quot;, &quot;Genus&quot;), rel = FALSE) test$taxa_abund$Level.1 %&lt;&gt;% .[!grepl(&quot;unclass&quot;, rownames(.)), ] test$taxa_abund$Phylum %&lt;&gt;% .[!grepl(&quot;unclass&quot;, rownames(.)), ] test1 &lt;- trans_abund$new(test, taxrank = &quot;Phylum&quot;, ntaxa = 10, use_percentage = FALSE) test1$plot_bar(facet = &quot;Group&quot;, bar_full = FALSE, xtext_angle = 30) + ggplot2::ylab(&quot;Abundance (RPK)&quot;) Let’s run LEfSe to find some functional biomarkers to differentiate two groups. # functional biomarker test$cal_abund(select_cols = 1:3, rel = TRUE) test1 &lt;- trans_diff$new(test, method = &quot;lefse&quot;, group = &quot;Group&quot;) test1$plot_diff_bar(threshold = 3) 9.3 Gut microbiome We use mouse gut data stored in file2meco package to show the input of QIIME2 file and the use of metabolic trait database NJC19 database(Lim et al. 2020). library(microeco) library(file2meco) library(ggplot2) # use data files inside the file2meco package. abund_file_path &lt;- system.file(&quot;extdata&quot;, &quot;dada2_table.qza&quot;, package=&quot;file2meco&quot;) sample_file_path &lt;- system.file(&quot;extdata&quot;, &quot;sample-metadata.tsv&quot;, package=&quot;file2meco&quot;) taxonomy_file_path &lt;- system.file(&quot;extdata&quot;, &quot;taxonomy.qza&quot;, package=&quot;file2meco&quot;) # construct microtable object data1 &lt;- qiime2meco(abund_file_path, sample_table = sample_file_path, taxonomy_table = taxonomy_file_path) data1$tidy_dataset() # revise the species names in tax_table as the information in the example file is not standard select_rows &lt;- data1$tax_table$Species != &quot;s__&quot; data1$tax_table$Species[select_rows] &lt;- paste0(&quot;s__&quot;, gsub(&quot;g__&quot;, &quot;&quot;, data1$tax_table$Genus[select_rows]), &quot; &quot;, gsub(&quot;s__&quot;, &quot;&quot;, data1$tax_table$Species[select_rows])) # taxonomic abundance data1$cal_abund() # create object of trans_func data2 &lt;- trans_func$new(data1) # Select NJC19 database data2$cal_spe_func(prok_database = &quot;NJC19&quot;) # get the trait percentage data data2$cal_spe_func_perc(abundance_weighted = FALSE) # inset the trait percentage result into taxa_abund of microtable object data1$taxa_abund$Trait &lt;- as.data.frame(t(data2$res_spe_func_perc)) # use trans_abund to plot t1 &lt;- trans_abund$new(dataset = data1, taxrank = &quot;Trait&quot;, ntaxa = 10, use_percentage = FALSE) t1$plot_box(group = &quot;donor_status&quot;, xtext_angle = 30) + ylab(&quot;Relative population abundance (%)&quot;) + theme(axis.text.x = element_text(size = 13)) # differential abundance test of the traits percentage and use random forest to find biomarkers t1 &lt;- trans_diff$new(dataset = data1, method = &quot;rf&quot;, group = &quot;donor_status&quot;, taxa_level = &quot;Trait&quot;) t1$plot_diff_bar(use_number = 1:30) References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
