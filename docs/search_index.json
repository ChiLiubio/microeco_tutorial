[["pipeline.html", "Chapter 15 Pipeline", " Chapter 15 Pipeline Pipelining operations (i.e., method chaining) can make the steps of data analysis more concise and clear. The microeco package has fully supported pipelining operations since version 1.12.0. Based on the characteristics of R6 class objects, pipelining operations can be performed using the $ operator. In this section, we list some examples. # version &gt;= 1.12.0 if(packageVersion(&quot;microeco&quot;) &lt; &quot;1.12.0&quot;){ install.packages(&quot;microeco&quot;) } When you need to name an object of a class, do not include plotting function in pipeline operations, because plotting functions return the plot object (usually ggplot2), not the class object itself. library(magrittr) library(microeco) t1 &lt;- trans_alpha$ new(dataset = dataset, group = &quot;Type&quot;)$ cal_diff(method = &quot;anova&quot;, measure = &quot;Shannon&quot;) t1$plot_alpha(plot_type = &quot;errorbar&quot;, measure = &quot;Shannon&quot;, add_sig = TRUE) When the main purpose is to create a plot and there is no need to retain the object of a class, you can write the entire operation chain. trans_alpha$ new(dataset = dataset, group = &quot;Type&quot;)$ cal_diff(method = &quot;anova&quot;, measure = &quot;Shannon&quot;)$ plot_alpha(plot_type = &quot;errorbar&quot;, measure = &quot;Shannon&quot;, add_sig = TRUE) g1 &lt;- trans_alpha$ new(dataset = dataset, group = &quot;Type&quot;)$ cal_diff(method = &quot;anova&quot;, measure = &quot;Shannon&quot;)$ plot_alpha(plot_type = &quot;errorbar&quot;, measure = &quot;Shannon&quot;, add_sig = TRUE) g1 Other examples for reference are shown below. # microtable library(magrittr) library(microeco) data(sample_info_16S) data(otu_table_16S) data(taxonomy_table_16S) data(phylo_tree_16S) set.seed(123) test &lt;- microtable$ new(sample_table = sample_info_16S, otu_table = otu_table_16S, tax_table = taxonomy_table_16S, phylo_tree = phylo_tree_16S)$ filter_pollution(taxa = c(&quot;mitochondria&quot;, &quot;chloroplast&quot;))$ tidy_dataset()$ filter_taxa() test$sample_sums() %&gt;% range test$ rarefy_samples()$ cal_abund()$ save_abund(file.path(test_dir, &quot;taxa_abund&quot;))$ cal_alphadiv()$ save_alphadiv(file.path(test_dir, &quot;alpha_diversity&quot;))$ cal_betadiv()$ save_betadiv(file.path(test_dir, &quot;beta_diversity&quot;)) # trans_beta library(magrittr) library(microeco) data(dataset) t1 &lt;- trans_beta$ new(dataset = dataset, group = &quot;Group&quot;, measure = &quot;bray&quot;)$ cal_ordination(method = &quot;PCoA&quot;, ncomp = 5) g1 &lt;- t1$plot_ordination(plot_color = &quot;Group&quot;) g1 trans_beta$ new(dataset = dataset, group = &quot;Type&quot;, measure = &quot;bray&quot;)$ cal_group_distance(within_group = TRUE)$ cal_group_distance_diff(method = &quot;wilcox&quot;)$ plot_group_distance() trans_beta$ new(dataset = dataset, measure = &quot;bray&quot;)$ cal_manova(manova_all = FALSE, group = &quot;Type&quot;, by_group = &quot;Group&quot;)$ res_manova trans_beta$ new(dataset = dataset, group = &quot;Group&quot;, measure = &quot;bray&quot;)$ cal_anosim()$ res_anosim # trans_network library(microeco) data(dataset) t1 &lt;- trans_network$new(dataset = dataset, cor_method = &quot;pearson&quot;, filter_thres = 0.001)$ cal_network(COR_p_thres = 0.05, COR_cut = 0.6)$ cal_module()$ cal_network_attr()$ get_node_table()$ get_edge_table()$ cal_sum_links()$ save_network() t1$plot_network() t1$plot_sum_links(method = &quot;circlize&quot;, transparency = 0.2, annotationTrackHeight = circlize::mm_h(c(5, 5))) t1$plot_taxa_roles(use_type = 1) # trans_classifier library(magrittr) library(microeco) data(dataset) t1 &lt;- trans_classifier$ new(dataset = dataset, y.response = &quot;Saline&quot;, x.predictors = &quot;Genus&quot;)$ cal_preProcess(method = c(&quot;center&quot;, &quot;scale&quot;, &quot;nzv&quot;))$ cal_feature_sel(boruta.maxRuns = 300, boruta.pValue = 0.01)$ cal_split(prop.train = 3/4)$ set_trainControl()$ cal_train()$ cal_predict()$ cal_ROC() t1$plot_ROC() t1$ cal_caretList(methodList = c(&#39;rf&#39;, &#39;svmRadial&#39;))$ cal_caretList_resamples()$ plot_caretList_resamples() + geom_point(position = &quot;jitter&quot;) + theme_bw() # trans_env library(microeco) data(dataset) data(env_data_16S) trans_env$ new(dataset = dataset, add_data = env_data_16S[, 4:10])$ cal_diff(group = &quot;Group&quot;, method = &quot;KW_dunn&quot;)$ plot_diff(measure = &quot;pH&quot;, add_sig = T) t1 &lt;- trans_env$ new(dataset = dataset, add_data = env_data_16S[, 4:11])$ cal_ordination(method = &quot;dbRDA&quot;, use_measure = &quot;bray&quot;)$ trans_ordination(adjust_arrow_length = TRUE, max_perc_env = 1.5)$ cal_ordination_anova() t1$plot_ordination(plot_color = &quot;Group&quot;) trans_env$ new(dataset = dataset, add_data = env_data_16S[, 4:11])$ cal_cor(use_data = &quot;Genus&quot;)$ plot_cor() # trans_func library(magrittr) library(microeco) data(dataset) trans_func$ new(dataset)$ cal_spe_func(prok_database = &quot;FAPROTAX&quot;)$ cal_spe_func_perc(abundance_weighted = FALSE)$ plot_spe_func_perc() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
